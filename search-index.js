var searchIndex = {};
searchIndex["protocoll"] = {"doc":"some basic protocols and implementations for rust collections. inspired by\nclojure&#39;s design, albeit not persistent.","items":[[8,"Map","protocoll","basic protocol for maps.",null,null],[10,"fun","","a map maps from keys to values.",0,null],[10,"inc","","adds entry `kv`.",0,null],[10,"dec","","removes key `k`.",0,null],[10,"update","","like clojure&#39;s [update](http://clojuredocs.org/clojure.core/update).",0,null],[11,"merge","","like clojure&#39;s [merge-with](http://clojuredocs.org/clojure.core/merge-with).",0,null],[11,"absorb","","takes another collection into this one.",0,null],[10,"shrink","","`shrink_to_fit`.",0,null],[10,"empty","","`clear`.",0,null],[8,"Set","","basic protocol for sets.",null,null],[10,"fun","","a set maps from items to themselves.",1,null],[10,"inc","","adds item `i`.",1,null],[10,"dec","","removes item `i`.",1,null],[11,"absorb","","takes another collection into this one.",1,null],[10,"shrink","","`shrink_to_fit`.",1,null],[10,"empty","","`clear`.",1,null],[8,"Seq","","basic protocol for seqs.",null,null],[10,"fun","","a seq maps from indices to items. O(n) for `BinaryHeap`.",2,null],[10,"inc","","adds item `i`. both `Vec` and `VecDeque` grows to the right.",2,null],[10,"dec","","removes an item. for `Vec` it&#39;s the last one; for `VecDeque` the first;\nfor `BinaryHeap` it&#39;s the greatest one.",2,null],[11,"absorb","","takes another collection into this one.",2,null],[10,"shrink","","`shrink_to_fit`.",2,null],[10,"empty","","`clear`.",2,null],[8,"Str","","basic protocol for strs;",null,null],[10,"inc","","pushs `c`.",3,null],[10,"dec","","pops the last char.",3,null],[10,"absorb","","appends `s`.",3,null],[10,"shrink","","`shrink_to_fit`.",3,null],[10,"empty","","`clear`.",3,null],[11,"merge","","like clojure&#39;s [merge-with](http://clojuredocs.org/clojure.core/merge-with).",0,null],[11,"absorb","","takes another collection into this one.",0,null],[11,"absorb","","takes another collection into this one.",1,null],[11,"absorb","","takes another collection into this one.",2,null]],"paths":[[8,"Map"],[8,"Set"],[8,"Seq"],[8,"Str"]]};
initSearch(searchIndex);
